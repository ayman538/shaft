name: E2E Tests Production Regression

## Important notes:
###  * Configuration methods (@Before & @After) must have the (alwaysRun = true) parameter.
###  * Test cases (@Test) must have (groups = {"production"}) parameter.
###  * Test classes with the "production group" must be in a SIT package.

on:
  workflow_dispatch:
#    schedule:
#      - cron: '00 23 * * *'
    inputs:
      targetBrowser:
        description: 'Choose Target Browser'
        default: 'firefox'
        type: choice
        options:
          - firefox
          - chrome
          - microsoftedge

jobs:
  Production_Linux_Grid:
    runs-on: [ self-hosted, wfc ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Native Selenium Grid
        run: |
          if [ '${{ github.event.inputs.targetBrowser }}' == 'firefox' ]; then
            docker-compose -f src/main/resources/docker-compose/selenium4.yml up --scale chrome=0 --scale edge=0 --scale firefox=4 -d
          elif [ '${{ github.event.inputs.targetBrowser }}' == 'chrome' ]; then
            docker-compose -f src/main/resources/docker-compose/selenium4.yml up --scale chrome=4 --scale edge=0 --scale firefox=0 -d
          elif [ '${{ github.event.inputs.targetBrowser }}' == 'microsoftedge' ]; then
            docker-compose -f src/main/resources/docker-compose/selenium4.yml up --scale chrome=0 --scale edge=4 --scale firefox=0 -d
          elif [ '${{ github.event.inputs.targetBrowser }}' == '' ]; then
            docker-compose -f src/main/resources/docker-compose/selenium4.yml up --scale chrome=0 --scale edge=0 --scale firefox=4 -d
          else
            echo "Browser not supported"
          fi
      - name: Check running containers
        run: docker ps

      - name: Install Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true

      - name: Install Maven
        run: |
          sudo apt update
          sudo apt-get install -y maven
      - name: Check maven version
        run: mvn -version

      - name: Set proxy settings
        run: |
          mkdir -p ~/.m2
          cp ./configs/settings.xml ~/.m2/settings.xml
          cp ./configs/net.properties $JAVA_HOME/conf/

      - name: Run tests
        continue-on-error: true
        run: mvn test -Dcom.SHAFT.proxySettings="172.31.58.254:3128" -DdriverProxySettings="true" -DexecutionAddress="localhost:4444" -DtargetOperatingSystem="LINUX" -DtargetBrowserName="${{ github.event.inputs.targetBrowser }}" -DheadlessExecution="true" -DgenerateAllureReportArchive="true" -DscreenshotParams_whenToTakeAScreenshot="FailuresOnly" -DcreateAnimatedGif="false" -Dtest="%regex[.*SIT.*]" -Dgroups="production"

      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Production_Linux_Grid_Allure
          path: "generatedReport_*.zip"
      - name: Upload Execution Summary Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Production_Linux_Grid_Summary
          path: "execution-summary/ExecutionSummaryReport_*.html"

      - name: Publish Test Results
        uses: VFDE-Digital-CloudandInfrastructure/dci-publish-unit-test-result-mirrored-action@v2
        if: always()
        with:
          check_name: "Production_Linux_Grid Test Results"
          files: target/surefire-reports/TEST-*.xml
